{"version":3,"sources":["index.js"],"names":["root","factory","define","amd","exports","module","hashish","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","is_string","value","is_array","is_object","_typeof","Symbol","iterator","obj","constructor","prototype","h","_len","arguments","args","_key","selector","find","item","props","children","_hashish$utils$parse_","utils","parse_selector","tag","attrs","node","document","createElement","className","class_names","forEach","key","Object","assign","keys","map","style","cssText","TypeError","setAttribute","render","apply","concat","_len2","_key2","child","createTextNode","appendChild","replace","parentNode","replaceChild","pseudo_tags","result","id","match","exec","push","indexOf","type","substring","_len3","_key3","normalize_class_names","filter","class_name","join","split","reduce","ret","trim"],"mappings":"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","file":"index.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.hashish = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar hashish = {};\n\nhashish.h = function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n    }\n\n    var selector = args.find(function (item) {\n        return is_string(item);\n    }) || '';\n    var props = args.find(function (item) {\n        return is_object(item) && !is_array(item);\n    }) || {};\n    var children = args.find(function (item) {\n        return is_array(item);\n    }) || [];\n\n    var _hashish$utils$parse_ = hashish.utils.parse_selector(selector),\n        tag = _hashish$utils$parse_.tag,\n        attrs = _hashish$utils$parse_.attrs;\n\n    var node = document.createElement(tag);\n\n    attrs.className = hashish.utils.class_names(attrs.className, props['class'] || {}, props['className'] || {});['class', 'className'].forEach(function (key) {\n        return delete props[key];\n    });\n    Object.assign(attrs, props);\n\n    Object.keys(attrs).map(function (key) {\n        if (attrs[key]) {\n            if (key == 'className') {\n                node.className = attrs[key];\n            } else if (key == 'style') {\n                if (is_string(attrs[key])) {\n                    node.style.cssText = attrs[key];\n                } else if (is_object(attrs[key])) {\n                    Object.assign(node.style, attrs[key]);\n                } else {\n                    throw new TypeError(\"Expecting string or object for style attribute. Found \" + _typeof(attrs[key]) + \".\");\n                }\n            } else {\n                node.setAttribute(key, attrs[key]);\n            }\n        }\n    });\n\n    hashish.render.apply(hashish, [node].concat(_toConsumableArray(children)));\n\n    return node;\n};\n\nhashish.render = function (root) {\n    for (var _len2 = arguments.length, children = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        children[_key2 - 1] = arguments[_key2];\n    }\n\n    children.map(function (child) {\n        if (is_string(child)) {\n            child = document.createTextNode(child);\n        } else if (is_object(child) && 'render' in child) {\n            child = child.render();\n        }\n        root.appendChild(child);\n    });\n};\n\nhashish.replace = function (node, child) {\n    if (is_object(child) && 'render' in child) {\n        child = child.render();\n    }\n    node.parentNode.replaceChild(child, node);\n};\n\n/**\n * Selectors parser\n */\nhashish.utils = {};\nhashish.utils.pseudo_tags = ['button', 'checkbox', 'color', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\nhashish.utils.parse_selector = function (selector) {\n    var result = {\n        tag: 'div',\n        attrs: {\n            id: null,\n            className: []\n        }\n    };\n\n    var match = void 0;\n    while (selector) {\n        if (match = /^\\.([^\\.\\#\\:]+)/.exec(selector)) {\n            result.attrs.className.push(match[1]);\n        } else if (match = /^\\#([^\\.\\#\\:]+)/.exec(selector)) {\n            result.attrs.id = match[1];\n        } else if (match = /^\\:([^\\.\\#\\:]+)/.exec(selector)) {\n            if (hashish.utils.pseudo_tags.indexOf(match[1]) > -1) {\n                result.tag = 'input';\n                result.attrs.type = match[1];\n            } else {\n                throw new TypeError(\"Unknown pseudo-selector \" + match[1] + \".\");\n            }\n        } else if (match = /^([^\\.\\#]+)/.exec(selector)) {\n            result.tag = match[1];\n        }\n        selector = selector.substring(match[0].length);\n    }\n\n    return result;\n};\n\n/**\n * Class names helpers\n * Inspired by https://github.com/JedWatson/classnames\n */\nhashish.utils.class_names = function () {\n    var class_names = {};\n\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n    }\n\n    Object.assign.apply(Object, [class_names].concat(_toConsumableArray(args.map(hashish.utils.normalize_class_names))));\n    return Object.keys(class_names).filter(function (class_name) {\n        return !!class_names[class_name];\n    }).join(' ');\n};\n\nhashish.utils.normalize_class_names = function (class_names) {\n    if (class_names) {\n        if (is_string(class_names)) {\n            class_names = class_names.split(/\\s+/);\n        }\n\n        if (is_array(class_names)) {\n            return class_names.reduce(function (ret, class_name) {\n                ret[class_name.trim()] = true;\n                return ret;\n            }, {});\n        }\n\n        if (is_object(class_names)) {\n            Object.keys(class_names).forEach(function (class_name) {\n                class_names[class_name] = !!class_names[class_name];\n            });\n            return class_names;\n        } else {\n            throw new TypeError(\"Expecting string, array or object for class names. Found \" + (typeof class_names === 'undefined' ? 'undefined' : _typeof(class_names)) + \".\");\n        }\n    } else {\n        return {};\n    }\n};\n\n/**\n * Misc helpers\n */\nfunction is_string(value) {\n    return typeof value === 'string';\n}\n\nfunction is_array(value) {\n    return Array.isArray(value);\n}\n\nfunction is_object(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\nreturn hashish;\n}));\n"]}